//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VGTTutorial {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VGTTutorial.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We have created a plane normal to the satellite&apos;s velocity vector, with the satellite&apos;s center point as the start location and a displacement vector to Earth as a reference.  Click &quot;Create Angle&quot; in order to display the angles between the VGT components we have displayed thus far..
        /// </summary>
        internal static string CreateAngles {
            get {
                return ResourceManager.GetString("CreateAngles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VGT can provide user defined &quot;Templates&quot;.  Once a template is defined (such as our Velocity Vector) every object of the same type created after it will contain the same vector, plane, point, axes, angle, or system.  Click &quot;Create Axes&quot; to show a predefined Axes..
        /// </summary>
        internal static string CreateAxes {
            get {
                return ResourceManager.GetString("CreateAxes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here we have displayed the &quot;Body&quot; Axes to demonstrate Axes.  Axes can be based on vectors, central bodies, axes, points, and a variety of other components.  Please click &quot;Create Plane&quot;..
        /// </summary>
        internal static string CreatePlane {
            get {
                return ResourceManager.GetString("CreatePlane", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Now that we have loaded our control, we will create a satellite and facility for our demonstration.  Please click &quot;Create Satellite&quot;..
        /// </summary>
        internal static string CreateSatellite {
            get {
                return ResourceManager.GetString("CreateSatellite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We have created a satellite and facility.  Let&apos;s demonstrate the vector geometry tool&apos;s ability to display vectors and calculations regarding STK objects.  We will display the distance to the facility in &quot;km&quot;.  Click &quot;Create Vector&quot; to create a Displacement vector to accessFac.  The magnitude (or distance) will be displayed..
        /// </summary>
        internal static string CreateVector {
            get {
                return ResourceManager.GetString("CreateVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As you can see, we have created three angles referencing &quot;NormalPlane&quot;, the velocity vector, and the distance vector to our accessFac.  By clicking &quot;Play&quot; in the upper left hand corner, you will be able to see the angles and vectors automatically adjust as the satellite makes its rotation around the central body Earth..
        /// </summary>
        internal static string Finish {
            get {
                return ResourceManager.GetString("Finish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We have created a vector from the center of the our Satellite to accessFac.  Let&apos;s display the velocity vector that comes as a standard template to VGT satellite objects. Click &quot;Show Velocity Vector&quot;..
        /// </summary>
        internal static string ShowVelocityVector {
            get {
                return ResourceManager.GetString("ShowVelocityVector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to AGI&apos;s tutorial for VGT. In this tutorial, we will show the basics of VGT (Vector Geometry Tool). Please click &quot;New Scenario&quot; to get started..
        /// </summary>
        internal static string Welcome {
            get {
                return ResourceManager.GetString("Welcome", resourceCulture);
            }
        }
    }
}
