// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "agstkxapplication.h"

// Dispatch interfaces referenced by this interface
#include "agexeccmdresult.h"


/////////////////////////////////////////////////////////////////////////////
// CAgSTKXApplication properties

/////////////////////////////////////////////////////////////////////////////
// CAgSTKXApplication operations

CAgExecCmdResult CAgSTKXApplication::ExecuteCommand(LPCTSTR Command)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0xa, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		Command);
	return CAgExecCmdResult(pDispatch);
}

BOOL CAgSTKXApplication::GetEnableConnect()
{
	BOOL result;
	InvokeHelper(0x64, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CAgSTKXApplication::SetEnableConnect(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x64, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

short CAgSTKXApplication::GetConnectPort()
{
	short result;
	InvokeHelper(0x65, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, NULL);
	return result;
}

void CAgSTKXApplication::SetConnectPort(short nNewValue)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x65, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

CString CAgSTKXApplication::GetHostID()
{
	CString result;
	InvokeHelper(0xc, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CAgSTKXApplication::GetRegistrationID()
{
	CString result;
	InvokeHelper(0xd, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CAgSTKXApplication::GetVersion()
{
	CString result;
	InvokeHelper(0xe, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CAgSTKXApplication::GetLicensingReport()
{
	CString result;
	InvokeHelper(0xf, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CAgSTKXApplication::SetVendorID(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x68, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CAgSTKXApplication::GetVendorID()
{
	CString result;
	InvokeHelper(0x68, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

BOOL CAgSTKXApplication::SetOnlineOptions(BOOL UseProxy, LPCTSTR ServerName, long PortNum, LPCTSTR UserName, LPCTSTR Password, BOOL SavePassword)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL VTS_BSTR VTS_I4 VTS_BSTR VTS_BSTR VTS_BOOL;
	InvokeHelper(0x10, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		UseProxy, ServerName, PortNum, UserName, Password, SavePassword);
	return result;
}

BOOL CAgSTKXApplication::GetOnlineOptions(BOOL* UseProxy, BSTR* ServerName, long* PortNum, BSTR* UserName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PBOOL VTS_PBSTR VTS_PI4 VTS_PBSTR;
	InvokeHelper(0x11, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		UseProxy, ServerName, PortNum, UserName);
	return result;
}

CString CAgSTKXApplication::GetLogFileFullName()
{
	CString result;
	InvokeHelper(0x13, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CAgSTKXApplication::GetLoggingMode()
{
	long result;
	InvokeHelper(0x14, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CAgSTKXApplication::SetLoggingMode(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CAgSTKXApplication::GetConnectMaxConnections()
{
	long result;
	InvokeHelper(0x6e, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CAgSTKXApplication::SetConnectMaxConnections(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x6e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}
